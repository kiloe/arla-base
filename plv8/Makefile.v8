#-----------------------------------------------------------------------------#
#
# Makefile for v8 static link
#
# 'make static' will download the v8 source and build it, then build plv8
# with statically link to v8 with snapshot.  This assumes certain directory
# structure in v8 which may be different from version to another, but user
# can specify the v8 version by AUTOV8_VERSION, too.
#-----------------------------------------------------------------------------#
AUTOV8_VERSION = 4.3.66
AUTOV8_DIR = build/v8-git-mirror-$(AUTOV8_VERSION)
AUTOV8_OUT = build/v8-git-mirror-$(AUTOV8_VERSION)/out/native
AUTOV8_DEPOT_TOOLS = build/depot_tools
AUTOV8_SNAPSHOT = $(AUTOV8_OUT)/libv8_snapshot.a
AUTOV8_STATIC_LIBS = libv8.a

export PATH := $(abspath $(AUTOV8_DEPOT_TOOLS)):$(PATH)

SHLIB_LINK += libv8.a

all: libv8.a

# For some reason, this solves parallel make dependency.
plv8_config.h plv8.so: libv8.a

libv8.mri: $(AUTOV8_SNAPSHOT)
	echo 'create libv8.a' > $@.tmp
	for lib in `find $(AUTOV8_OUT) -type f -name 'libv8_*.a'`; do \
		echo "addlib $$lib" >> $@.tmp; \
	done
	echo 'save' >> $@.tmp
	echo 'end' >> $@.tmp
	mv $@.tmp $@

libv8.a: libv8.mri $(AUTOV8_DIR)
	ar -M < $<

$(AUTOV8_DEPOT_TOOLS):
	mkdir -p build
	cd build; git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git

$(AUTOV8_DIR): $(AUTOV8_DEPOT_TOOLS)
	cd build; fetch v8; cd v8; git checkout $(AUTOV8_VERSION); gclient sync
	mv build/v8 $(AUTOV8_DIR)

$(AUTOV8_SNAPSHOT): $(AUTOV8_DIR)
	env CXXFLAGS=-fPIC CFLAGS=-fPIC $(MAKE) -C build/v8-git-mirror-$(AUTOV8_VERSION) backtrace=off i18nsupport=off  native

include Makefile

CCFLAGS += -I$(AUTOV8_DIR)/include -I$(AUTOV8_DIR)
# We're gonna build static link.  Rip it out after include Makefile
SHLIB_LINK := $(filter-out -lv8, $(SHLIB_LINK))

